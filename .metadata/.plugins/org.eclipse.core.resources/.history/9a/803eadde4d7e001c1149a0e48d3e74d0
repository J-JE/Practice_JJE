package com.hw3.controller;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Scanner;

import com.hw3.model.vo.Book;

public class BookManager {

	Scanner sc = new Scanner(System.in);
	
	//기본 생성자
	public BookManager() {	}
	
	//5가지 도서에 대한 정보를 객체배열과 Object스트림을 통해 파일에 저장하는 메소드
	public void fileSave() {
		
		Book[] bk = new Book[5]; // Book객체를 받을 객체 배열
		
		//배열 5개 데이터 초기화 => 날짜는 setCalendar 메소드 이용함~
		bk[0] = new Book("C언어", "김씨", 10000, setCalendar(2012, 2, 2), 0.1);
		bk[1] = new Book("자바", "이씨", 20000, setCalendar(2013, 3, 3), 0.2);
		bk[2] = new Book("C++", "박씨", 30000, setCalendar(2014, 4, 4), 0.3);
		bk[3] = new Book("넛지", "서씨", 40000, setCalendar(2015, 5, 5), 0.4);
		bk[4] = new Book("개미", "최씨", 50000, setCalendar(2016, 6, 6), 0.5);
		
		// try with resource 구문으로 “books.dat”파일에 저장되게 ObjectOutputStream과 FileOutputStream을 생성
		// 즉 finally에서 스트림 해제를 안해줘도됨! 
		try(ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("books.dat"))){
			//보조 스트림 : ObjectOutputStream
			//기반 스트림 : FileOutputStream
			
			for(int i=0; i<bk.length; i++) { //배열 길이 만큼! 
				oos.writeObject(bk[i]); //bk[i] 객체를 oos 에 출력(저장)
			}
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	//지정된 날짜의 Calendar형 반환메소드 => 매개변수로 들어온 년, 월, 일로 설정된 Calendar형 반환
	//===>ㅠㅠ해결 안돼서 일단 반환형 String으로 함... 찾아봐서 수정할것!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	public String setCalendar(int year, int month, int date) {
		
		Calendar calendar = Calendar.getInstance();
		//new로 하지 않음(못함). 생성자의 접근제어자가 protected 이기 때문에 상속받은 클래스만 new로 생성가능.
		
		calendar.set(year, month-1, date); //월은 자동으로 +1 되므로, -1 한 값으로 넣어줘야함
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy년 MM월 dd일"); //내가 뽑고자 하는 형식

		String cal = sdf.format(calendar.getTime());
		
		return cal; 
	}
	
	//파일로부터 도서에 대한 정보를 불러와서 콘솔에 출력하는 메소드
	public void fileRead() {
		
		Book[] readBook = new Book[10]; //읽어오는 Book 객체들을 담아줄 새배열 readBook
		
		// try with resource 구문 (FileNotFoundException과 ClassNotFoundException, EOFException, IOException 처리)
		
		try(ObjectInputStream ois = new ObjectInputStream(new FileInputStream("books.dat"))){
		//보조 스트림 : ObjectInputStream
		//기반 스트림 : ObjectInputStream
			
			int i = 0; //readBook 인덱스 
			while(true) {
				readBook[i] = (Book)ois.readObject(); 
				//ois.readObject() 메소드는 말그대로 Object 로 읽어오기 때문에, 우리가 담고자하는 배열의 타입으로 Book 으로 형변환! 
				System.out.println(readBook[i].toString());
				i++; //증가 
			}//while
			
		} catch(ClassNotFoundException e) { 
			e.printStackTrace();
		} catch(EOFException e) { //파일이 끝나면! 왜냐면 -> 우리가 새로 담는 배열보다 가져오는 배열이 갯수가 더 적기 떄문
			System.out.println("books.dat 읽기 완료!");
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	
}
